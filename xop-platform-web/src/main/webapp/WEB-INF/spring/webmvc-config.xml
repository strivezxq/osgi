<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd     http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd">

	<!-- 定义控制器注解扫描包路径，控制器注解为 @Controller TODO -->
	<context:component-scan base-package="com.**.controller.**"
		use-default-filters="false">
		<context:include-filter expression="org.springframework.stereotype.Controller"
			type="annotation" />
	</context:component-scan>

	<!-- Turns on support for mapping requests to Spring MVC @Controller methods 
		Also registers default Formatters and Validators for use across all @Controllers -->
	<mvc:annotation-driven conversion-service="applicationConversionService" />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources -->
	<mvc:resources location="/, classpath:/META-INF/web-resources/"
		mapping="/resources/**" />

	<!-- Allows for mapping the DispatcherServlet to "/" by forwarding static 
		resource requests to the container's default Servlet -->
	<mvc:default-servlet-handler />

	<!-- register "global" interceptor beans to apply to all registered HandlerMappings -->
	<mvc:interceptors>
		<bean class="org.springframework.web.servlet.theme.ThemeChangeInterceptor" />
		<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor"
			p:paramName="lang" />
		<!-- 
	    <mvc:interceptor>
	    	<mvc:mapping path="/api/supplier/**" /> 
			<bean class="com.xiu.open.platform.web.interceptor.SecurityInterceptor" >
			</bean>
	    </mvc:interceptor>
	     -->
	</mvc:interceptors>
	
	<!-- selects a static view for rendering without the need for an explicit 
		controller -->
		
	<!-- <mvc:view-controller path="/" view-name="index" />
	<mvc:view-controller path="/uncaughtException" />
	<mvc:view-controller path="/resourceNotFound" />
	<mvc:view-controller path="/dataAccessFailure" /> -->

	<!-- Resolves localized messages*.properties and application.properties 
		files in the application to allow for internationalization. The messages*.properties 
		files translate Roo generated messages which are part of the admin interface, 
		the application.properties resource bundle localizes all application specific 
		messages such as entity names and menu items. -->

	<!-- store preferred language configuration in a cookie -->
	<bean class="org.springframework.web.servlet.i18n.CookieLocaleResolver"
		id="localeResolver" p:cookieName="locale" />

	<!-- resolves localized <theme_name>.properties files in the classpath to 
		allow for theme support -->
	<bean
		class="org.springframework.ui.context.support.ResourceBundleThemeSource"
		id="themeSource" />

	<!-- store preferred theme configuration in a cookie -->
	<bean class="org.springframework.web.servlet.theme.CookieThemeResolver"
		id="themeResolver" p:cookieName="theme" p:defaultThemeName="standard" />
		
	<bean
		class="org.springframework.osgi.extensions.annotation.ServiceReferenceInjectionBeanPostProcessor" />

	<!-- This bean resolves specific types of exceptions to corresponding logical 
		- view names for error views. The default behaviour of DispatcherServlet 
		- is to propagate all exceptions to the servlet container: this will happen 
		- here with all other types of exceptions. -->
	<!-- <bean
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver"
		p:defaultErrorView="uncaughtException">
		<property name="exceptionMappings">
			<props>
				<prop key=".DataAccessException">dataAccessFailure</prop>
				<prop key=".NoSuchRequestHandlingMethodException">resourceNotFound</prop>
				<prop key=".TypeMismatchException">resourceNotFound</prop>
				<prop key=".MissingServletRequestParameterException">resourceNotFound</prop>
			</props>
		</property>
	</bean> -->

	<!-- 用于支持文件上传功能 -->
	<bean
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver"
		id="multipartResolver" />


	<!-- tiles2 配置 -->
	<bean id="tilesViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver"
		>
		<property name="viewClass"
			value="org.springframework.web.servlet.view.tiles2.TilesView" />
	</bean>
	<bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles2.TilesConfigurer"
		>
		<property name="definitions">
			<list>
				<value>/WEB-INF/layouts/layouts.xml</value>
				<!-- Scan views directory for Tiles configurations -->
				<value>/WEB-INF/views/**/views.xml</value>
			</list>
		</property>
	</bean>


	<!-- REST支持 -->
  <bean class="org.springframework.http.MediaType" id="htmlMediaType">
	  <constructor-arg value="text"/>
	  <constructor-arg value="html"/>
	  <constructor-arg value="utf-8"/>
	</bean>
	<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
	  <property name="order" value="0"/>
	  <property name="defaultContentType">
	    <ref bean="htmlMediaType"/>
	  </property>
	  <property name="mediaTypes">
	    <map>
	      <entry key="json" value="application/json"/>
	      <entry key="xml" value="application/xml"/>
	    </map>
	  </property>
	  <property name="defaultViews">
	    <list>
	      <bean class="org.springframework.web.servlet.view.json.MappingJacksonJsonView"/>
	      <bean class="org.springframework.web.servlet.view.xml.MarshallingView">
	        <property name="marshaller">
	          <bean class="org.springframework.oxm.castor.CastorMarshaller"/>
	        </property>
	      </bean>
	    </list>
	  </property>
	 
	  <property name="viewResolvers">
	    <ref bean="tilesViewResolver"/>
	  </property>
	</bean>

	<!-- 启动支持 
	<bean class="com.xiu.open.platform.web.controller.ApplicationConversionServiceFactoryBean" id="applicationConversionService" />
		-->
</beans>
